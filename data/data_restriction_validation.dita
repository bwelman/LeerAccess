<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="data_restriction_validation" xml:lang="nl-NL">
    <title>Restrictie en validatie van gegevens</title>
    <shortdesc>Mogelijkheden om een correcte en gewenste invoer van gegevens af te
        dwingen..</shortdesc>
    <prolog>
        <critdates>
            <created date="2017-10-05"/>
            <revised modified="2017-10-05"/>
        </critdates>
        <metadata>
            <keywords>
                <indexterm>Gegevens<indexterm>restricties</indexterm><indexterm>validatie</indexterm></indexterm>
                <indexterm>Restricties<indexterm>gegevens</indexterm></indexterm>
                <indexterm>Validatie<indexterm>gegevens</indexterm></indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <p>Je hebt in Access verschillende mogelijkheden om de manier te besturen waarop gegevens in
            de database worden ingevoerd. Je kunt bijvoorbeeld de gegevens die in een veld worden
            ingevoerd beperken door een validatieregel voor dat veld te definiëren. Als de
            ingevoerde gegevens niet aan de regel voldoen, wordt een foutbericht weergegeven waarin
            wordt meegedeeld welk soort invoer is toegestaan. Een andere methode om gegevensinvoer
            te besturen is het gebruik van een invoermasker, dat een format voor invoer biedt met
            behulp van karakters en symbolen.</p>
        <p>Je kunt deze eenvoudige methoden van validatie en restrictie toepassen door eigenschappen
            voor velden in tabellen of eigenschappen voor besturingselementen in formulieren in te
            stellen.</p>
        <p>Het is meestal het beste om validatie en restrictie van gegevens in de ontwerpweergave
            van de tabel te definiëren door veldeigenschappen in te stellen. Dit bespaart tijd,
            omdat telkens als je het veld in een formulier gebruikt, de regels voor veldvalidatie en
            andere eigenschappen op de gegevensinvoer van het formulier worden toegepast.</p>
        <p>Als de gegevens die in een besturingselement van een formulier worden ingevoerd niet
            afhankelijk zijn van een veld in een tabel dan moet je de eigenschappen voor validatie
            in het formulier definiëren.</p>
        <example>
            <title>Voorbeeld</title>
            <p>Een memo van de afdeling Marketing van Snoopy Bonbons meldt dat de prijs van de doos
                Butterscotch moet worden gewijzigd in € 7,75.</p>
            <ol>
                <li>Open het formulier <varname>Dozen</varname> en navigeer naar de doos
                        <varname>Butterscotch</varname>.</li>
                <li>Wijzig de Doosprijs van € 27,75 in € 7,75 en druk op TAB toets. Er verschijnt
                    een validatiebericht met de mededeling dat deze prijs niet juist is en hoe we
                    het probleem kunnen verhelpen.<simpletable frame="all" relcolwidth="1.0*">
                        <strow>
                            <stentry>Doosprijs te laag. Neem contact op met Marketing voor
                                prijsinformatie, en geef een prijs op die minimaal gelijk is aan de
                                dooskosten maal 2.</stentry>
                        </strow>
                    </simpletable>Omdat aan het veld doosprijs een validatieregel is gekoppeld,
                    wordt de prijs van 7,50 verworpen.</li>
                <li>Klik op <uicontrol>OK</uicontrol>.</li>
                <li>Verander de doosprijs terug in € 27,75 en druk op TAB toets. Sluit daarna het
                    formulier.</li>
            </ol>
        </example>
    </conbody>
</concept>
